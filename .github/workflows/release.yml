name: 'release'
on:
  push:
    branches: [main]

jobs:
  release-to-gitHub:
    name: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Accept Android SDK Licenses
        run: |
          mkdir -p /usr/local/lib/android/sdk/licenses
          echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > /usr/local/lib/android/sdk/licenses/android-sdk-license
          echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> /usr/local/lib/android/sdk/licenses/android-sdk-license
          echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" >> /usr/local/lib/android/sdk/licenses/android-sdk-license
          echo "84831b9409646a918e30573bab4c9c91346d8abd" > /usr/local/lib/android/sdk/licenses/android-sdk-preview-license
          echo "29.0.13113456" > /usr/local/lib/android/sdk/licenses/android-ndk-license

      - name: Decode signing key
        run: echo $SIGNING_KEY | base64 -d > android/app/key.jks
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}

      - uses: subosito/flutter-action@v2

      - name: Get Flutter packages
        run: flutter pub get

      - name: Build APK
        env:
          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          ALIAS: ${{ secrets.ALIAS }}
          KEY_PATH: key.jks
          TENCENT_SDKAPPID: ${{ secrets.TENCENT_SDKAPPID }}
          TENCENT_KEY: ${{ secrets.TENCENT_KEY }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        run: |
          echo "TENCENT_SDKAPPID=${TENCENT_SDKAPPID}" >> .env
          echo "TENCENT_KEY=${TENCENT_KEY}" >> .env
          echo "SUPABASE_URL=${SUPABASE_URL}" >> .env
          echo "SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}" >> .env
          flutter build apk --split-per-abi

      - name: Build Web
        run: flutter build web

      - name: Zip Web Build
        run: zip -r web.zip ./build/web

      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | sed 's/version: //')
          tag=v${version%%+*}
          echo "version=$version" >> $GITHUB_ENV
          echo "tag=$tag" >> $GITHUB_ENV

      - name: Create GitHub Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag ${{ env.tag }}
          git push origin ${{ env.tag }}

      - name: Generate Changelog
        id: changelog
        run: |
          # 确保获取所有标签
          git fetch --tags --force

          # 获取最后两个tag（当前新创建的和之前的最新tag）
          tags=($(git tag --sort=-committerdate))
          current_tag="${tags[0]}"
          previous_tag=""

          # 如果存在至少两个tag，则获取上一个tag
          if [ ${#tags[@]} -ge 2 ]; then
            previous_tag="${tags[1]}"
          fi

          if [ -z "$previous_tag" ]; then
            # 如果没有之前的tag，获取所有提交（限制数量以防止过大）
            changelog=$(git log --pretty=format:"- %s" --no-merges -n 50)
          else
            # 如果有之前的tag，获取从上个tag到现在的提交
            changelog=$(git log --pretty=format:"- %s" --no-merges "$previous_tag..$current_tag")
          fi

          # 如果没有有效的changelog内容，添加默认信息
          if [ -z "$changelog" ]; then
            changelog="- 此版本包含一些改进和错误修复"
          fi

          # 将changelog保存到文件中
          echo "$changelog" > CHANGELOG.txt

          # 设置多行环境变量
          echo 'changelog<<EOF' >> $GITHUB_ENV
          cat CHANGELOG.txt >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/web

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.tag }}
          files: |
            build/app/outputs/flutter-apk/*.apk
            web.zip
          body: |
            由提交 ${{ github.sha }} 自动触发编译生成的 Release

            更新内容：
            ${{ env.changelog }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Rename APK
        run: |
          mv build/app/outputs/flutter-apk/app-arm64-v8a-release.apk build/app/outputs/flutter-apk/${{ env.tag }}.apk

      - name: Upload to R2
        uses: ryand56/r2-upload-action@latest
        with:
          r2-account-id: ${{ secrets.R2_ACCOUNT_ID }}
          r2-access-key-id: ${{ secrets.R2_ACCESS_KEY_ID }}
          r2-secret-access-key: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          r2-bucket: ${{ secrets.R2_BUCKET }}
          source-dir: build/app/outputs/flutter-apk/${{ env.tag }}.apk
          destination-dir: app/fumeo
          output-file-url: true
          multipart-size: 100
          max-retries: 5
          multipart-concurrent: true
          keep-file-fresh: false
